type Query {
    "Lista de productos de la tienda"
    products (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 1,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE): ResultProduct


    productsPlatforms (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Especificar el de la platforma seleccionada"
        platform: ID!): ResultProduct

    productsPlatformsRandom (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Especificar el de la platforma seleccionada"
        platform: ID,
        "Especificamos si queremos un número aleatorio de items"
        random: Boolean = false): ResultProduct

        
    productsOffersLast (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Tope del precio para considerar como oferta"
        topPrice: Float = -1,
        "Tope para especificar por debajo que hay poco stock"
        lastUnits: Int = -1,
        "Seleccionar los elementos de manera aleatoria"
        random: Boolean = false): ResultProduct
}